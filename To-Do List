#include <iostream>
#include <vector>
#include <cstring>
#include <fstream>
using namespace std;

class ToDoList{
	public:
		void addTask();
		void removeTask();
		void markAsDone();
		void displayTasks();
}todo;


void ToDoList :: addTask() {
	 
	system("cls");
	
	ofstream outfile("file.txt",ios::app);
	
	if(!outfile){
		cout<<"FILE not FOUND!"<<endl;
	}
	
	string task;
	cout<<"Enter your task: ";
	cin.ignore();
	getline(cin,task);
	
	outfile<<task<<endl;
	
	cout<<"Task added successfully!"<<endl<<endl;
	outfile.close();
	
	ifstream infile("file.txt");
	
	if(!infile){
		cout<<"FILE not FOUND!"<<endl;
	}
	
	while(getline(infile,task)){
		infile>>task;
	}
	
	infile.close();
}


void ToDoList::removeTask() {
	
    system("cls");
    
    ifstream infile("file.txt");
    
    if (!infile) {
        cout << "FILE not FOUND!" << endl;
        return;
    }

    vector<string> tasks;
    string task;
    int taskNum;

    while (getline(infile, task)) {
        tasks.push_back(task);
    }
    infile.close();

    if (tasks.empty()) {
        cout << "No tasks to remove!" << endl;
        return;
    }

    cout << "Tasks List:" << endl;
    for (size_t i = 0; i < tasks.size(); i++) {
        cout << i + 1 << ". " << tasks[i] << endl;
    }

    cout << "Enter the task number to remove: ";
    cin >> taskNum;

    if (taskNum < 1 || taskNum > tasks.size()) {
        cout << "Invalid task number!" << endl;
        return;
    }

    tasks.erase(tasks.begin() + (taskNum - 1));

    ofstream outfile("file.txt");
    if (!outfile) {
        cout << "FILE not FOUND!" << endl;
        return;
    }

    for (const string &t : tasks) {
        outfile << t << endl;
    }

    cout << "Task removed successfully!" << endl;
}


void ToDoList :: markAsDone(){
	system("cls");
	ifstream infile("file.txt");
	if(!infile){
		cout<<"FILE not FOUND!"<<endl;
	}
	string task;
	vector<string>tasks;
	int done;
	while(getline(infile,task)){
		tasks.push_back(task);
	}
	cout<<"Enter the task number to work as done: ";
	cin>>done;
	if(done < 1 || done > tasks.size()){
		cout<<"Invalid Task number"<<endl;
	}
	else{
		tasks[done-1] = "[Done]" + tasks[done -1];
	}
	ofstream outfile("file.txt");
	if(!outfile){
		cout<<"FILE not FOUND!"<<endl;
	}
	for(const string& t : tasks){
		outfile<<t<<endl;
	}
	infile.close();
	outfile.close();
	cout<<"Tasks marked as done successfully!"<<endl;
}


void ToDoList :: displayTasks(){
	system("cls");
	ifstream infile("\file.txt");
	if(!infile){
		cout<<"FILE not FOUND!"<<endl;
	}
	
	string task;
	vector<string>tasks;
	
	cout << "Tasks List:" << endl;
	while (getline(infile, task)) {
		cout<<" "<<task<<endl;
        tasks.push_back(task);
    }
    
    	if(!tasks.empty()){
		cout<<"No Tasks is present!"<<endl;
	}
	else{
    for (size_t i = 0; i < tasks.size(); i++) {
        cout << i + 1 << ". " << tasks[i] << endl;
    }
}
    infile.close();
}


int main(){
	int choice;
	do{
		cout<<endl<<"*********TO-DO LIST*********"<<endl;
		cout<<"1. Add Task"<<endl;
		cout<<"2. Remove Task"<<endl;
		cout<<"3. Mark as Done"<<endl;
		cout<<"4. Display Task"<<endl;
		cout<<"5. Exit"<<endl;
		cout<<"Enter your choice: ";
		cin>>choice;
		
			switch(choice){
			case 1: todo.addTask();
			        break;
			case 2: todo.removeTask();
			        break;
			case 3: todo.markAsDone();
			        break;
			case 4: todo.displayTasks();
			        break;
			case 5: cout<<"Exiting....."; 
			        break;
			default:cout<<"Invalid option! Please choose from 1-5"<<endl;
			    	break;
			}
	}while(choice != 5);
	
	return 0;
}
